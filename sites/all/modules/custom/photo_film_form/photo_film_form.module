<?php
/**
 * Implementation of hook_theme
 */
function photo_film_form_theme($existing, $type, $theme, $path) {
  return array(
    'photo_film_form_select_theme_wrapper' => array(
      'render element' => 'form',
      'path' => drupal_get_path('module', 'photo_film_form'),
      'file' => '/includes/photo_film_choose_theme_step.inc'
    ),
    'photo_film_form_select_theme_content' => array(
      'variables' => array(
        'title' => NULL,
        'items' => array(),
      ),
      'template' => '/templates/photo-film-form-select-theme-content',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
    'photo_film_form_select_style_wrapper' => array(
      'render element' => 'form',
      'path' => drupal_get_path('module', 'photo_film_form'),
      'file' => '/includes/photo_film_style_step.inc'
    ),
    'photo_film_form_select_style_content' => array(
      'variables' => array(
        'title' => NULL,
        'items' => array(),
      ),
      'template' => '/templates/photo-film-form-select-style-content',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
    'photo_film_select_music_step_wrapper' => array(
      'render element' => 'form',
      'path' => drupal_get_path('module', 'photo_film_form'),
      'file' => '/includes/photo_film_user_music_upload_step.inc'
    ),
    'photo_film_select_music_step_content' => array(
      'variables' => array(
        'title' => NULL,
        'items' => array(),
        'warning' => NULL,
      ),
      'template' => '/templates/photo-film-select-music-step-content',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
    'photo_film_select_picture_step_content' => array(
      'variables' => array(
        'title' => NULL,
        'warning' => NULL,
      ),
      'template' => '/templates/photo-film-select-picture-step-content',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
    'photo_film_form_breadcrumb' => array(
      'render element' => 'form',
      'variables' => array(
        'steps' => array(),
        'current' => NULL,
      ),
      'template' => '/templates/photo-film-form-form-navigation',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
    'photo_film_form_textfield' => array(
      'render element' => 'element',
      'template' => '/templates//elements/photo-film-form-textfield',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
    'photo_film_form_select' => array(
      'render element' => 'element',
      'template' => '/templates/elements/photo-film-form-select',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function photo_film_form_menu() {
  $items['admin/config/user-interface/photo-film'] = array(
    'title' => t('Photo film settings form'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('photo_film_form_settings_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer photo film form'),
    'type' => MENU_NORMAL_ITEM,
    'file path' => drupal_get_path('module', 'photo_film_form'),
    'file' => 'photo_film_form.admin.inc'
  );

  $items['admin/photo-film/file/save'] = array(
    'title' => t('Saves file stream'),
    'page callback' => 'photo_film_form_save_file_wrapper',
    'access callback' => TRUE,
    'file path' => drupal_get_path('module', 'photo_film_form') . '/includes',
    'file' => 'photo_film_form_file_handler.inc',
    'type' => MENU_CALLBACK,
  );

  $items['admin/photo-film/file/remove'] = array(
    'title' => t('Saves file stream'),
    'page callback' => 'photo_film_form_delete_file',
    'access callback' => TRUE,
    'file path' => drupal_get_path('module', 'photo_film_form') . '/includes',
    'file' => 'photo_film_form_file_handler.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implementation of template_process()
 */
function photo_film_form_process(&$variables, $hook) {
  if ($hook == 'photo_film_form_textfield') {
    element_set_attributes($variables['element'], array('id', 'name', 'value', 'size', 'maxlength'));
    _form_set_class($variables['element'], array('form-text'));
    $variables['element']['#attributes']['type'] = 'text';
  }

  if ($hook == 'photo_film_form_select') {
    element_set_attributes($variables['element'], array('id', 'name', 'size'));
    _form_set_class($variables['element'], array('form-select'));
  }
}

/**
 * Implementation of hook_permission
 */
function photo_film_form_permission() {
  return array(
    'administer photo film form' => array(
      'title' => t('Administer photo film form module'),
      'description' => t('Perform administration of photo film form module.'),
    ),
  );
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function photo_film_form_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return 'plugins/' . $plugin;
  }
}

/**
 * Clears the wizard cache.
 *
 * @param integer $id
 *   cache id.
 */
function photo_film_form_cache_clear($id) {
  ctools_include('object-cache');
  ctools_object_cache_clear('photo_film_form', $id);
}

/**
 * Stores our little cache so that we can retain data from form to form.
 *
 * @param integer $id
 *   cache id.
 * @param object $object
 *   object with form values.
 */
function photo_film_form_cache_set($id, $object) {
  ctools_include('object-cache');
  ctools_object_cache_set('photo_film_form', $id, $object);
}

/**
 * Gets the current object from the cache, or default.
 *
 * @param integer $id
 *   cache id.
 *
 * @return object
 *   cache with stored stuff.
 */
function photo_film_form_cache_get($id) {
  ctools_include('object-cache');
  $object = ctools_object_cache_get('photo_film_form', $id);
  if (!$object) {
    // Create a default object.
    $object = new stdClass;
  }

  return $object;
}

/**
 * Handles the 'next' click on the add/edit pane form wizard.
 *
 * All we need to do is store the updated pane in the cache.
 */
function photo_film_form_wizard_next(&$form_state) {
  photo_film_form_cache_set($form_state['object_id'], $form_state['object']);
}

/**
 * Handles the 'finish' click on teh add/edit pane form wizard.
 *
 * All we need to do is set a flag so the return can handle adding
 * the pane.
 */
function photo_film_form_wizard_finish(&$form_state) {
  // photo_film_form_cache_clear(1);
  $form_state['complete'] = TRUE;
}

/**
 * Handles the 'cancel' click on the add/edit pane form wizard.
 */
function photo_film_form_wizard_cancel(&$form_state) {
  //photo_film_form_cache_clear(1);
  $form_state['cancel'] = TRUE;
}

/**
 * Returns form with success message.
 *
 * @param object $object
 *   object with form values.
 *
 * @return array
 *   returns renderable array for multistep form result output.
 */
function photo_film_form_finished($object) {
  if ($object->current_step == 'order_info') {
    //create an archive with order information an files
    module_load_include('inc', 'photo_film_form', 'includes/photo_film_form_file_handler');
    // get the information about files to store them in archive
    $files = photo_film_form_prepare_files($object);
    // todo change archive name
    // create an archive
    $archive = photo_film_form_create_archive($files, 'test');
    //photo_film_node_order.inc
    module_load_include('inc', 'photo_film_form', 'includes/photo_film_node_order');
    photo_film_create_order_node($object, $archive);
    // clear cache
    photo_film_form_cache_clear(1);
  }
  $form = array();
  $message = variable_get('photo_film_form_success_message', '');
  $form['success_message'] = array(
    '#type' => 'markup',
    '#markup' => (!empty($message['value']) ? $message['value'] : '')
  );
  $form['order_more'] = array(
    '#type' => 'submit',
    '#value' => t('Order more')
  );
  $form['#action'] = 'photo-film-form/nojs/themes';

  return $form;
}

/**
 * Define array for ctools multistep wizard.
 * @return array
 */
function photo_film_form_ctools_multi_step_form_info() {
  return array(
    'id' => 'photo_film_form',
    'path' => "photo-film-form/nojs/%step",
    'show trail' => TRUE,
    'show back' => TRUE,
    'show cancel' => TRUE,
    'show return' => FALSE,
    'next callback' => 'photo_film_form_wizard_next',
    'finish callback' => 'photo_film_form_wizard_finish',
    'cancel callback' => 'photo_film_form_wizard_cancel',
    // we need to override this
    'order' => array(
      'themes' => t('Select theme for your video'),
      'styles' => t('Select style for your video'),
      'user_music_upload' => t('Select music for your video'),
      'photo_film_select_picture_step' => t('Select photos for your video'),
      'photo_film_form_order' => t('Order'),
      'photo_film_form_finish' => t('Finish'),
    ),
    'forms' => array(
      'themes' => array(
        'form id' => 'photo_film_form_choose_theme_step',
        'include' => drupal_get_path('module', 'photo_film_form') . '/includes/photo_film_choose_theme_step.inc',
      ),
      'styles' => array(
        'form id' => 'photo_film_form_choose_style_step',
        'include' => drupal_get_path('module', 'photo_film_form') . '/includes/photo_film_style_step.inc',
      ),
      'user_music_upload' => array(
        'form id' => 'photo_film_form_user_music_upload_step',
        'include' => drupal_get_path('module', 'photo_film_form') . '/includes/photo_film_user_music_upload_step.inc',
      ),
      'photo_film_select_picture_step' => array(
        'form id' => 'photo_film_select_picture_step',
        'include' => drupal_get_path('module', 'photo_film_form') . '/includes/photo_film_select_picture_step.inc',
      ),
      'photo_film_form_order' => array(
        'form id' => 'photo_film_form_order',
        'include' => drupal_get_path('module', 'photo_film_form') . '/includes/photo_film_order.inc',
      ),
      'photo_film_form_finish' => array(
        'form id' => 'photo_film_form_finish',
        'include' => drupal_get_path('module', 'photo_film_form') . '/includes/photo_film_finish.inc',
      ),
    ),
  );
}


/**
 * Function that calculates total amount of the order
 * @param $cache object that stores info about users selects
 * @return total amount of the order
 */
function photo_film_form_calculate_amount($cache) {
  $pictures_count = count($cache->pictures);
  $music = !(empty($cache->music['fid']));
  if (!empty($cache->style['style']) && $style = taxonomy_term_load($cache->style['style'])) {
    if ($style_price = field_get_items('taxonomy_term', $style, 'field_coefficient')) {
      $style_price = $style_price[0]['value'];
    }
  }
  else {
    $style_price = 1;
  }

  if (!empty($cache->format['tid']) && $format = $cache->format['tid']) {
    $format = taxonomy_term_load($format);
    if ($format_price = field_get_items('taxonomy_term', $format, 'field_coefficient')) {
      $format_price = $format_price[0]['value'];
    }
  }
  else {
    $format_price = 0;
  }

  return ($pictures_count * $style_price + $music * 30) * $format_price;
}

/**
 * Callback for ajax on the last step on our form
 * returns recalculated amount of order
 */
function photo_film_form_order_get_amount($form, $form_state) {
  $cache = photo_film_form_cache_get(1);
  // try to add new property to the object
  if (!empty($form_state['values']['format'])) {
    $cache->format['tid'] = $form_state['values']['format'];
  }

  $amount = photo_film_form_calculate_amount($cache);
  watchdog('my', $amount);
  return photo_film_form_order_get_amount_element($amount);
}

/**
 * Total amount element of the last step
 * @param $amount
 */
function photo_film_form_order_get_amount_element($amount) {
  $title = '<label>' . t('Pay amount') . ':</label>';

  return array(
    '#prefix' => '<div class="form-item payment-item" id="order-amount">',
    '#title' => t('Pay amount') . ':',
    '#type' => 'markup',
    '#markup' => $title . '<span>' . $amount . '</span>',
    '#suffix' => '</div>',
    '#weight' => -7,
    '#amount' => $amount,
  );
}

/**
 * Layout of submit button
 * @param $button
 * @param @add_text - text before button
 */
function photo_film_form_render_submit_button($button, $add_text = 'Did you select?') {
    $button['#prefix'] = '<hr class="separator" />' .
                         '<div class="form-button-container">' .
                           '<h1>' . t($add_text) . '</h1>' .
                           '<div class="form-button-wrap">';
    $button['#suffix'] = '</div></div>';
    $button['#tree'] = TRUE;

    return $button;
}