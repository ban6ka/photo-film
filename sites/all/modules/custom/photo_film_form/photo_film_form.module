<?php

/**
 * Implementation of hook_theme
 */
function photo_film_form_theme($existing, $type, $theme, $path) {
  return array(
    'photo_film_form_select_theme_wrapper' => array(
      'render element' => 'form',
      'path' => drupal_get_path('module', 'photo_film_form'),
      'file' => '/includes/photo_film_choose_theme_step.inc'
    ),
    'photo_film_form_select_theme_content' => array(
      'variables' => array(
        'title' => NULL,
        'items' => array(),
      ),
      'template' => '/templates/photo-film-form-select-theme-content',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
    'photo_film_form_select_style_wrapper' => array(
      'render element' => 'form',
      'path' => drupal_get_path('module', 'photo_film_form'),
      'file' => '/includes/photo_film_style_step.inc'
    ),
    'photo_film_form_select_style_content' => array(
      'variables' => array(
        'title' => NULL,
        'items' => array(),
      ),
      'template' => '/templates/photo-film-form-select-style-content',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
    'photo_film_select_music_step_wrapper' => array(
      'render element' => 'form',
      'path' => drupal_get_path('module', 'photo_film_form'),
      'file' => '/includes/photo_film_user_music_upload_step.inc'
    ),
    'photo_film_select_music_step_content' => array(
      'variables' => array(
        'title' => NULL,
        'items' => array(),
        'warning' => NULL,
      ),
      'template' => '/templates/photo-film-select-music-step-content',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
    'photo_film_select_picture_step_content' => array(
      'variables' => array(
        'title' => NULL,
        'warning' => NULL,
      ),
      'template' => '/templates/photo-film-select-picture-step-content',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
    'photo_film_form_breadcrumb' => array(
      'render element' => 'form',
      'variables' => array(
        'steps' => array(),
        'current' => NULL,
      ),
      'template' => '/templates/photo-film-form-form-navigation',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
    'photo_film_form_textfield' => array(
      'render element' => 'element',
      'template' => '/templates//elements/photo-film-form-textfield',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
    'photo_film_form_select' => array(
      'render element' => 'element',
      'template' => '/templates/elements/photo-film-form-select',
      'path' => drupal_get_path('module', 'photo_film_form'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function photo_film_form_menu() {
  $items['admin/config/user-interface/photo-film'] = array(
    'title' => t('Photo film settings form'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('photo_film_form_settings_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer photo film form'),
    'type' => MENU_NORMAL_ITEM,
    'file path' => drupal_get_path('module', 'photo_film_form'),
    'file' => 'photo_film_form.admin.inc'
  );

  $items['admin/photo-film/file/save'] = array(
    'title' => t('Saves file stream'),
    'page callback' => 'photo_film_form_save_file_wrapper',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implementation of template_process()
 */
function photo_film_form_process(&$variables, $hook) {
  if ($hook == 'photo_film_form_textfield') {
    element_set_attributes($variables['element'], array('id', 'name', 'value', 'size', 'maxlength'));
    _form_set_class($variables['element'], array('form-text'));
    $variables['element']['#attributes']['type'] = 'text';
  }

  if ($hook == 'photo_film_form_select') {
    element_set_attributes($variables['element'], array('id', 'name', 'size'));
    _form_set_class($variables['element'], array('form-select'));
  }
}

/**
 * Implementation of hook_permission
 */
function photo_film_form_permission() {
  return array(
    'administer photo film form' => array(
      'title' => t('Administer photo film form module'),
      'description' => t('Perform administration of photo film form module.'),
    ),
  );
}

/**
 * Page callback for admin/photo-film/file/save
 * Stores user files
 */
function photo_film_form_save_file_wrapper() {
  $results = array(
    'Success' => FALSE,
    'Result' => array(),
    'ErrorMessage' => '',
  );

  if (!empty($_FILES)) {
    // jquery user file upload library adds it's own key which depends on input id
    $files = array_pop($_FILES);
    foreach ($files['name'] as $key => $value) {
      if (!empty($files['tmp_name'][$key]) && !empty($files['size'][$key]) && !empty($files['type'][$key])) {
        $destination = '';
        $is_image = FALSE;
        // form an array for photo_film_form_save_file function
        $file_to_save = array(
          'tmp_name' => $files['tmp_name'][$key],
          'type' => $files['type'][$key],
          'size' => $files['size'][$key],
          'name' => $value,
        );

        // depending on the file type we have different destinations
        if (strpos($file_to_save['type'], 'audio') !== FALSE) {
          $destination = variable_get('photo_film_form_music_upload_destination', '');
        }
        elseif (strpos($file_to_save['type'], 'image') !== FALSE) {
          $is_image = TRUE;
          $destination = variable_get('photo_film_form_picture_upload_destination', '');
        }
        // save file to destination and prepare results for js
        if (!empty($destination) && $saved = photo_film_form_save_file($file_to_save, $destination)) {
          $result = new stdClass();
          $result->fid = $saved->fid;
          // if it was an image give an url for preview
          if ($is_image) {
            $result->image_preview = image_style_url('photo_film_form_image_style', $saved->uri);
          }
          $results['Result'][] = $result;
        }
      }
    }
  }

  if (!empty($results['Result'])) {
    $results['Success'] = TRUE;
  }
  else {
    $results['ErrorMessage'] = t('We can\'t upload that, please, contact site administrator');
  }
  // output json for js
  drupal_json_output($results);
  exit;
}

/**
 * Helper function to store files.
 * Moves file from php temporary storage to destination and save it in to the db
 * @param $file_to_upload basically global $FILES single item
 * @param $destination to save the file
 * @return File object on success false otherwise
 */
function photo_film_form_save_file($file_to_upload, $destination) {
  // get the user which try to download file on the server
  global $user;

  $uploaded_file = FALSE;

  if (!empty($file_to_upload['tmp_name']) && $file_name = basename($file_to_upload['name'])) {
    // we need this to se whether file with this name is already exists if does that we will add _0 or _1
    $uri = file_build_uri($destination) . '/';
    $future_file_name = file_destination($uri . $file_name, FILE_EXISTS_RENAME);
    $future_file_name = explode('/', $future_file_name);
    $future_file_name = array_pop($future_file_name);

    // get the path of drupal file folder
    $file_path = variable_get('file_public_path', 'sites/default/files') . '/';

    // get the path where admin want to store a file
    $file_path .= $destination . '/' . $future_file_name;
    // try to save a file and add it to db, if not return false
    if ($file_loaded = drupal_move_uploaded_file($file_to_upload['tmp_name'], getcwd() . '/' . $file_path)) {
      // creating a file object, which will be saved in to the db
      $file = new stdClass();

      $file->uid = $user->uid;
      $file->name = $future_file_name;
      $file->uri = $uri . $future_file_name;
      $file->filemime = file_get_mimetype($file_name);
      $file->filesize = $file_to_upload['size'];
      $uploaded_file = file_save($file);
      // delete file from file usage table, so system can delete it per cron run
      file_usage_delete($uploaded_file, 'file');

    }
  }

  return $uploaded_file;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function photo_film_form_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return 'plugins/' . $plugin;
  }
}

/**
 * Clears the wizard cache.
 *
 * @param integer $id
 *   cache id.
 */
function photo_film_form_cache_clear($id) {
  ctools_include('object-cache');
  ctools_object_cache_clear('photo_film_form', $id);
}

/**
 * Stores our little cache so that we can retain data from form to form.
 *
 * @param integer $id
 *   cache id.
 * @param object $object
 *   object with form values.
 */
function photo_film_form_cache_set($id, $object) {
  ctools_include('object-cache');
  ctools_object_cache_set('photo_film_form', $id, $object);
}

/**
 * Gets the current object from the cache, or default.
 *
 * @param integer $id
 *   cache id.
 *
 * @return object
 *   cache with stored stuff.
 */
function photo_film_form_cache_get($id) {
  ctools_include('object-cache');
  $object = ctools_object_cache_get('photo_film_form', $id);
  if (!$object) {
    // Create a default object.
    $object = new stdClass;
  }

  return $object;
}

/**
 * Handles the 'next' click on the add/edit pane form wizard.
 *
 * All we need to do is store the updated pane in the cache.
 */
function photo_film_form_wizard_next(&$form_state) {
  photo_film_form_cache_set($form_state['object_id'], $form_state['object']);
}

/**
 * Handles the 'finish' click on teh add/edit pane form wizard.
 *
 * All we need to do is set a flag so the return can handle adding
 * the pane.
 */
function photo_film_form_wizard_finish(&$form_state) {
  photo_film_form_cache_clear(1);
  $form_state['complete'] = TRUE;
}

/**
 * Handles the 'cancel' click on the add/edit pane form wizard.
 */
function photo_film_form_wizard_cancel(&$form_state) {
  photo_film_form_cache_clear(1);
  $form_state['cancel'] = TRUE;
}

/**
 * Returns form with success message.
 *
 * @param object $object
 *   object with form values.
 *
 * @return array
 *   returns renderable array for multistep form result output.
 */
function photo_film_form_finished($object) {
  photo_film_form_cache_clear(1);
  $form = array();
  $message = variable_get('photo_film_form_success_message', '');
  $form['success_message'] = array(
    '#type' => 'markup',
    '#markup' => (!empty($message['value']) ? $message['value'] : '')
  );
  $form['order_more'] = array(
    '#type' => 'submit',
    '#value' => t('Order more')
  );
  $form['#action'] = 'photo-film-form/nojs/themes';

  return $form;
}